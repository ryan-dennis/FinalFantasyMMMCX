### Starting build.
# Target: party.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), extension:mli, file:party.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package qcheck -modules party.mli > party.mli.depends
# Target: party.cmi, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), byte, compile, extension:mli, file:party.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package qcheck -o party.cmi party.mli
# Target: party.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), extension:ml, file:party.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package qcheck -modules party.ml > party.ml.depends
# Target: party.cmo, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), byte, compile, extension:cmo, extension:ml, file:party.cmo, file:party.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package qcheck -o party.cmo party.ml
# Target: gauntlet.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), extension:mli, file:gauntlet.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package qcheck -modules gauntlet.mli > gauntlet.mli.depends
# Target: gauntlet.cmi, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), byte, compile, extension:mli, file:gauntlet.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package qcheck -o gauntlet.cmi gauntlet.mli
# Target: gauntlet.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), extension:ml, file:gauntlet.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package qcheck -modules gauntlet.ml > gauntlet.ml.depends
# Target: gauntlet.cmo, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), byte, compile, extension:cmo, extension:ml, file:gauntlet.cmo, file:gauntlet.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package qcheck -o gauntlet.cmo gauntlet.ml
# Target: command.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), extension:mli, file:command.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package qcheck -modules command.mli > command.mli.depends
# Target: command.cmi, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), byte, compile, extension:mli, file:command.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package qcheck -o command.cmi command.mli
# Target: command.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), extension:ml, file:command.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package qcheck -modules command.ml > command.ml.depends
# Target: command.cmo, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), byte, compile, extension:cmo, extension:ml, file:command.cmo, file:command.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package qcheck -o command.cmo command.ml
# Target: state.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), extension:mli, file:state.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package qcheck -modules state.mli > state.mli.depends
# Target: state.cmi, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), byte, compile, extension:mli, file:state.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package qcheck -o state.cmi state.mli
# Target: state.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), extension:ml, file:state.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package qcheck -modules state.ml > state.ml.depends
# Target: state.cmo, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), byte, compile, extension:cmo, extension:ml, file:state.cmo, file:state.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package qcheck -o state.cmo state.ml
# Target: display.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), extension:mli, file:display.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package qcheck -modules display.mli > display.mli.depends
# Target: display.cmi, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), byte, compile, extension:mli, file:display.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package qcheck -o display.cmi display.mli
# Target: display.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), extension:ml, file:display.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package qcheck -modules display.ml > display.ml.depends
# Target: display.cmo, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), byte, compile, extension:cmo, extension:ml, file:display.cmo, file:display.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package qcheck -o display.cmo display.ml
# Target: main.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), extension:mli, file:main.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package qcheck -modules main.mli > main.mli.depends
# Target: main.cmi, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), byte, compile, extension:mli, file:main.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package qcheck -o main.cmi main.mli
# Target: main.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package qcheck -modules main.ml > main.ml.depends
# Target: battle.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), extension:mli, file:battle.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package qcheck -modules battle.mli > battle.mli.depends
# Target: battle.cmi, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), byte, compile, extension:mli, file:battle.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package qcheck -o battle.cmi battle.mli
# Target: main.cmo, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package qcheck -o main.cmo main.ml
# Target: authors.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), extension:mli, file:authors.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package qcheck -modules authors.mli > authors.mli.depends
# Target: authors.cmi, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), byte, compile, extension:mli, file:authors.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package qcheck -o authors.cmi authors.mli
# Target: authors.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), extension:ml, file:authors.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -package qcheck -modules authors.ml > authors.ml.depends
# Target: authors.cmo, tags: { package(ANSITerminal), package(oUnit), package(qcheck), package(yojson), byte, compile, extension:cmo, extension:ml, file:authors.cmo, file:authors.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -package qcheck -o authors.cmo authors.ml
# Compilation successful.
